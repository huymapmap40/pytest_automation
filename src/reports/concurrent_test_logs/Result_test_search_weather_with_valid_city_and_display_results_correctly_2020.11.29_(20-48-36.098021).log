============================= test session starts =============================
platform win32 -- Python 3.8.5, pytest-6.1.2, py-1.9.0, pluggy-0.13.1
rootdir: C:\Users\Admin\Desktop\PyTest Automation\src, configfile: pytest.ini
plugins: allure-pytest-2.8.22, ast-transformer-1.0.3, forked-1.3.0, html-3.0.0, json-0.4.0, metadata-1.11.0, parallel-0.1.0, rerunfailures-9.1.1, soft-assertions-0.1.2, sugar-0.9.4, xdist-2.1.0
collected 2 items

src\test_cases\UI\open_weather_test.py EE                                [100%]

=================================== ERRORS ====================================
_ ERROR at setup of TestOpenWeather.test_search_weather_with_valid_city_and_display_results_correctly[ho chi minh] _

request = <SubRequest 'setup_driver' for <Function test_search_weather_with_valid_city_and_display_results_correctly[ho chi minh]>>

    @pytest.fixture(scope="class")
    def setup_driver(request):
        browserName = request.config.getoption("--browser")
>       config = DriverManagement.get_instance().init_driver(browser_name=browserName)

src\conftest.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
src\config\setup\driver_management.py:30: in init_driver
    initial_driver = webdriver.Remote(command_executor=remote_address, desired_capabilities=desired_capabilities)
..\..\appdata\local\programs\python\python38-32\lib\site-packages\selenium\webdriver\remote\webdriver.py:157: in __init__
    self.start_session(capabilities, browser_profile)
..\..\appdata\local\programs\python\python38-32\lib\site-packages\selenium\webdriver\remote\webdriver.py:252: in start_session
    response = self.execute(Command.NEW_SESSION, parameters)
..\..\appdata\local\programs\python\python38-32\lib\site-packages\selenium\webdriver\remote\webdriver.py:321: in execute
    self.error_handler.check_response(response)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0429D628>
response = {'status': 500, 'value': '{\n  "value": {\n    "stacktrace": "org.openqa.selenium.TimeoutException: connection refused...252\'\\nDriver info: driver.version: unknown\\nremote stacktrace: ",\n    "error": "timeout"\n  },\n  "status": 21\n}'}

    def check_response(self, response):
        """
        Checks that a JSON response from the WebDriver does not have an error.
    
        :Args:
         - response - The JSON response from the WebDriver server as a dictionary
           object.
    
        :Raises: If the response contains an error message.
        """
        status = response.get('status', None)
        if status is None or status == ErrorCode.SUCCESS:
            return
        value = None
        message = response.get("message", "")
        screen = response.get("screen", "")
        stacktrace = None
        if isinstance(status, int):
            value_json = response.get('value', None)
            if value_json and isinstance(value_json, basestring):
                import json
                try:
                    value = json.loads(value_json)
                    if len(value.keys()) == 1:
                        value = value['value']
                    status = value.get('error', None)
                    if status is None:
                        status = value["status"]
                        message = value["value"]
                        if not isinstance(message, basestring):
                            value = message
                            message = message.get('message')
                    else:
                        message = value.get('message', None)
                except ValueError:
                    pass
    
        exception_class = ErrorInResponseException
        if status in ErrorCode.NO_SUCH_ELEMENT:
            exception_class = NoSuchElementException
        elif status in ErrorCode.NO_SUCH_FRAME:
            exception_class = NoSuchFrameException
        elif status in ErrorCode.NO_SUCH_WINDOW:
            exception_class = NoSuchWindowException
        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:
            exception_class = StaleElementReferenceException
        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:
            exception_class = ElementNotVisibleException
        elif status in ErrorCode.INVALID_ELEMENT_STATE:
            exception_class = InvalidElementStateException
        elif status in ErrorCode.INVALID_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:
            exception_class = InvalidSelectorException
        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:
            exception_class = ElementNotSelectableException
        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:
            exception_class = ElementNotInteractableException
        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:
            exception_class = InvalidCookieDomainException
        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:
            exception_class = UnableToSetCookieException
        elif status in ErrorCode.TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.SCRIPT_TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.UNKNOWN_ERROR:
            exception_class = WebDriverException
        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:
            exception_class = UnexpectedAlertPresentException
        elif status in ErrorCode.NO_ALERT_OPEN:
            exception_class = NoAlertPresentException
        elif status in ErrorCode.IME_NOT_AVAILABLE:
            exception_class = ImeNotAvailableException
        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:
            exception_class = ImeActivationFailedException
        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:
            exception_class = MoveTargetOutOfBoundsException
        elif status in ErrorCode.JAVASCRIPT_ERROR:
            exception_class = JavascriptException
        elif status in ErrorCode.SESSION_NOT_CREATED:
            exception_class = SessionNotCreatedException
        elif status in ErrorCode.INVALID_ARGUMENT:
            exception_class = InvalidArgumentException
        elif status in ErrorCode.NO_SUCH_COOKIE:
            exception_class = NoSuchCookieException
        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:
            exception_class = ScreenshotException
        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:
            exception_class = ElementClickInterceptedException
        elif status in ErrorCode.INSECURE_CERTIFICATE:
            exception_class = InsecureCertificateException
        elif status in ErrorCode.INVALID_COORDINATES:
            exception_class = InvalidCoordinatesException
        elif status in ErrorCode.INVALID_SESSION_ID:
            exception_class = InvalidSessionIdException
        elif status in ErrorCode.UNKNOWN_METHOD:
            exception_class = UnknownMethodException
        else:
            exception_class = WebDriverException
        if value == '' or value is None:
            value = response['value']
        if isinstance(value, basestring):
            if exception_class == ErrorInResponseException:
                raise exception_class(response, value)
            raise exception_class(value)
        if message == "" and 'message' in value:
            message = value['message']
    
        screen = None
        if 'screen' in value:
            screen = value['screen']
    
        stacktrace = None
        if 'stackTrace' in value and value['stackTrace']:
            stacktrace = []
            try:
                for frame in value['stackTrace']:
                    line = self._value_or_default(frame, 'lineNumber', '')
                    file = self._value_or_default(frame, 'fileName', '<anonymous>')
                    if line:
                        file = "%s:%s" % (file, line)
                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')
                    if 'className' in frame:
                        meth = "%s.%s" % (frame['className'], meth)
                    msg = "    at %s (%s)"
                    msg = msg % (meth, file)
                    stacktrace.append(msg)
            except TypeError:
                pass
        if exception_class == ErrorInResponseException:
            raise exception_class(response, message)
        elif exception_class == UnexpectedAlertPresentException:
            alert_text = None
            if 'data' in value:
                alert_text = value['data'].get('text')
            elif 'alert' in value:
                alert_text = value['alert'].get('text')
            raise exception_class(message, screen, stacktrace, alert_text)
>       raise exception_class(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: connection refused
E       Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'
E       System info: host: '93407da0d186', ip: '172.18.0.2', os.name: 'Linux', os.arch: 'amd64', os.version: '4.19.128-microsoft-standard', java.version: '1.8.0_252'
E       Driver info: driver.version: unknown
E       remote stacktrace: 
E       Stacktrace:
E           at sun.reflect.NativeConstructorAccessorImpl.newInstance0 (NativeConstructorAccessorImpl.java:-2)
E           at sun.reflect.NativeConstructorAccessorImpl.newInstance (NativeConstructorAccessorImpl.java:62)
E           at sun.reflect.DelegatingConstructorAccessorImpl.newInstance (DelegatingConstructorAccessorImpl.java:45)
E           at java.lang.reflect.Constructor.newInstance (Constructor.java:423)
E           at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0 (W3CHandshakeResponse.java:62)
E           at org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0 (HandshakeResponse.java:30)
E           at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0 (ProtocolHandshake.java:126)
E           at java.util.stream.ReferencePipeline$3$1.accept (ReferencePipeline.java:193)
E           at java.util.Spliterators$ArraySpliterator.tryAdvance (Spliterators.java:958)
E           at java.util.stream.ReferencePipeline.forEachWithCancel (ReferencePipeline.java:126)
E           at java.util.stream.AbstractPipeline.copyIntoWithCancel (AbstractPipeline.java:499)
E           at java.util.stream.AbstractPipeline.copyInto (AbstractPipeline.java:486)
E           at java.util.stream.AbstractPipeline.wrapAndCopyInto (AbstractPipeline.java:472)
E           at java.util.stream.FindOps$FindOp.evaluateSequential (FindOps.java:152)
E           at java.util.stream.AbstractPipeline.evaluate (AbstractPipeline.java:234)
E           at java.util.stream.ReferencePipeline.findFirst (ReferencePipeline.java:531)
E           at org.openqa.selenium.remote.ProtocolHandshake.createSession (ProtocolHandshake.java:128)
E           at org.openqa.selenium.remote.ProtocolHandshake.createSession (ProtocolHandshake.java:74)
E           at org.openqa.selenium.grid.session.remote.RemoteSession$Factory.performHandshake (RemoteSession.java:147)
E           at org.openqa.selenium.grid.session.remote.ServicedSession$Factory.apply (ServicedSession.java:161)
E           at org.openqa.selenium.remote.server.ActiveSessionFactory.lambda$apply$12 (ActiveSessionFactory.java:180)
E           at java.util.stream.ReferencePipeline$3$1.accept (ReferencePipeline.java:193)
E           at java.util.stream.ReferencePipeline$11$1.accept (ReferencePipeline.java:440)
E           at java.util.stream.ReferencePipeline$2$1.accept (ReferencePipeline.java:175)
E           at java.util.Spliterators$ArraySpliterator.tryAdvance (Spliterators.java:958)
E           at java.util.stream.ReferencePipeline.forEachWithCancel (ReferencePipeline.java:126)
E           at java.util.stream.AbstractPipeline.copyIntoWithCancel (AbstractPipeline.java:499)
E           at java.util.stream.AbstractPipeline.copyInto (AbstractPipeline.java:486)
E           at java.util.stream.AbstractPipeline.wrapAndCopyInto (AbstractPipeline.java:472)
E           at java.util.stream.FindOps$FindOp.evaluateSequential (FindOps.java:152)
E           at java.util.stream.AbstractPipeline.evaluate (AbstractPipeline.java:234)
E           at java.util.stream.ReferencePipeline.findFirst (ReferencePipeline.java:531)
E           at org.openqa.selenium.remote.server.ActiveSessionFactory.apply (ActiveSessionFactory.java:183)
E           at org.openqa.selenium.remote.server.NewSessionPipeline.lambda$null$2 (NewSessionPipeline.java:66)
E           at java.util.stream.ReferencePipeline$3$1.accept (ReferencePipeline.java:193)
E           at java.util.stream.ReferencePipeline$2$1.accept (ReferencePipeline.java:175)
E           at java.util.Collections$2.tryAdvance (Collections.java:4719)
E           at java.util.stream.ReferencePipeline.forEachWithCancel (ReferencePipeline.java:126)
E           at java.util.stream.AbstractPipeline.copyIntoWithCancel (AbstractPipeline.java:499)
E           at java.util.stream.AbstractPipeline.copyInto (AbstractPipeline.java:486)
E           at java.util.stream.AbstractPipeline.wrapAndCopyInto (AbstractPipeline.java:472)
E           at java.util.stream.FindOps$FindOp.evaluateSequential (FindOps.java:152)
E           at java.util.stream.AbstractPipeline.evaluate (AbstractPipeline.java:234)
E           at java.util.stream.ReferencePipeline.findFirst (ReferencePipeline.java:531)
E           at org.openqa.selenium.remote.server.NewSessionPipeline.lambda$createNewSession$3 (NewSessionPipeline.java:69)
E           at java.util.stream.ReferencePipeline$3$1.accept (ReferencePipeline.java:193)
E           at java.util.stream.ReferencePipeline$3$1.accept (ReferencePipeline.java:193)
E           at java.util.stream.ReferencePipeline$3$1.accept (ReferencePipeline.java:193)
E           at java.util.stream.DistinctOps$1$2.accept (DistinctOps.java:175)
E           at java.util.stream.ReferencePipeline$2$1.accept (ReferencePipeline.java:175)
E           at java.util.stream.ReferencePipeline$3$1.accept (ReferencePipeline.java:193)
E           at java.util.stream.ReferencePipeline$2$1.accept (ReferencePipeline.java:175)
E           at java.util.stream.Streams$StreamBuilderImpl.tryAdvance (Streams.java:405)
E           at java.util.stream.Streams$ConcatSpliterator.tryAdvance (Streams.java:728)
E           at java.util.stream.ReferencePipeline.forEachWithCancel (ReferencePipeline.java:126)
E           at java.util.stream.AbstractPipeline.copyIntoWithCancel (AbstractPipeline.java:499)
E           at java.util.stream.AbstractPipeline.copyInto (AbstractPipeline.java:486)
E           at java.util.stream.AbstractPipeline.wrapAndCopyInto (AbstractPipeline.java:472)
E           at java.util.stream.FindOps$FindOp.evaluateSequential (FindOps.java:152)
E           at java.util.stream.AbstractPipeline.evaluate (AbstractPipeline.java:234)
E           at java.util.stream.ReferencePipeline.findFirst (ReferencePipeline.java:531)
E           at org.openqa.selenium.remote.server.NewSessionPipeline.createNewSession (NewSessionPipeline.java:72)
E           at org.openqa.selenium.remote.server.commandhandler.BeginSession.execute (BeginSession.java:65)
E           at org.openqa.selenium.remote.server.WebDriverServlet.lambda$handle$0 (WebDriverServlet.java:235)
E           at java.util.concurrent.Executors$RunnableAdapter.call (Executors.java:511)
E           at java.util.concurrent.FutureTask.run (FutureTask.java:266)
E           at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1149)
E           at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:624)
E           at java.lang.Thread.run (Thread.java:748)

..\..\appdata\local\programs\python\python38-32\lib\site-packages\selenium\webdriver\remote\errorhandler.py:242: TimeoutException
_ ERROR at setup of TestOpenWeather.test_search_weather_with_valid_city_and_display_results_correctly[ho chi minh, vn] _

request = <SubRequest 'setup_driver' for <Function test_search_weather_with_valid_city_and_display_results_correctly[ho chi minh]>>

    @pytest.fixture(scope="class")
    def setup_driver(request):
        browserName = request.config.getoption("--browser")
>       config = DriverManagement.get_instance().init_driver(browser_name=browserName)

src\conftest.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
src\config\setup\driver_management.py:30: in init_driver
    initial_driver = webdriver.Remote(command_executor=remote_address, desired_capabilities=desired_capabilities)
..\..\appdata\local\programs\python\python38-32\lib\site-packages\selenium\webdriver\remote\webdriver.py:157: in __init__
    self.start_session(capabilities, browser_profile)
..\..\appdata\local\programs\python\python38-32\lib\site-packages\selenium\webdriver\remote\webdriver.py:252: in start_session
    response = self.execute(Command.NEW_SESSION, parameters)
..\..\appdata\local\programs\python\python38-32\lib\site-packages\selenium\webdriver\remote\webdriver.py:321: in execute
    self.error_handler.check_response(response)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0429D628>
response = {'status': 500, 'value': '{\n  "value": {\n    "stacktrace": "org.openqa.selenium.TimeoutException: connection refused...252\'\\nDriver info: driver.version: unknown\\nremote stacktrace: ",\n    "error": "timeout"\n  },\n  "status": 21\n}'}

    def check_response(self, response):
        """
        Checks that a JSON response from the WebDriver does not have an error.
    
        :Args:
         - response - The JSON response from the WebDriver server as a dictionary
           object.
    
        :Raises: If the response contains an error message.
        """
        status = response.get('status', None)
        if status is None or status == ErrorCode.SUCCESS:
            return
        value = None
        message = response.get("message", "")
        screen = response.get("screen", "")
        stacktrace = None
        if isinstance(status, int):
            value_json = response.get('value', None)
            if value_json and isinstance(value_json, basestring):
                import json
                try:
                    value = json.loads(value_json)
                    if len(value.keys()) == 1:
                        value = value['value']
                    status = value.get('error', None)
                    if status is None:
                        status = value["status"]
                        message = value["value"]
                        if not isinstance(message, basestring):
                            value = message
                            message = message.get('message')
                    else:
                        message = value.get('message', None)
                except ValueError:
                    pass
    
        exception_class = ErrorInResponseException
        if status in ErrorCode.NO_SUCH_ELEMENT:
            exception_class = NoSuchElementException
        elif status in ErrorCode.NO_SUCH_FRAME:
            exception_class = NoSuchFrameException
        elif status in ErrorCode.NO_SUCH_WINDOW:
            exception_class = NoSuchWindowException
        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:
            exception_class = StaleElementReferenceException
        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:
            exception_class = ElementNotVisibleException
        elif status in ErrorCode.INVALID_ELEMENT_STATE:
            exception_class = InvalidElementStateException
        elif status in ErrorCode.INVALID_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:
            exception_class = InvalidSelectorException
        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:
            exception_class = ElementNotSelectableException
        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:
            exception_class = ElementNotInteractableException
        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:
            exception_class = InvalidCookieDomainException
        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:
            exception_class = UnableToSetCookieException
        elif status in ErrorCode.TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.SCRIPT_TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.UNKNOWN_ERROR:
            exception_class = WebDriverException
        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:
            exception_class = UnexpectedAlertPresentException
        elif status in ErrorCode.NO_ALERT_OPEN:
            exception_class = NoAlertPresentException
        elif status in ErrorCode.IME_NOT_AVAILABLE:
            exception_class = ImeNotAvailableException
        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:
            exception_class = ImeActivationFailedException
        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:
            exception_class = MoveTargetOutOfBoundsException
        elif status in ErrorCode.JAVASCRIPT_ERROR:
            exception_class = JavascriptException
        elif status in ErrorCode.SESSION_NOT_CREATED:
            exception_class = SessionNotCreatedException
        elif status in ErrorCode.INVALID_ARGUMENT:
            exception_class = InvalidArgumentException
        elif status in ErrorCode.NO_SUCH_COOKIE:
            exception_class = NoSuchCookieException
        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:
            exception_class = ScreenshotException
        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:
            exception_class = ElementClickInterceptedException
        elif status in ErrorCode.INSECURE_CERTIFICATE:
            exception_class = InsecureCertificateException
        elif status in ErrorCode.INVALID_COORDINATES:
            exception_class = InvalidCoordinatesException
        elif status in ErrorCode.INVALID_SESSION_ID:
            exception_class = InvalidSessionIdException
        elif status in ErrorCode.UNKNOWN_METHOD:
            exception_class = UnknownMethodException
        else:
            exception_class = WebDriverException
        if value == '' or value is None:
            value = response['value']
        if isinstance(value, basestring):
            if exception_class == ErrorInResponseException:
                raise exception_class(response, value)
            raise exception_class(value)
        if message == "" and 'message' in value:
            message = value['message']
    
        screen = None
        if 'screen' in value:
            screen = value['screen']
    
        stacktrace = None
        if 'stackTrace' in value and value['stackTrace']:
            stacktrace = []
            try:
                for frame in value['stackTrace']:
                    line = self._value_or_default(frame, 'lineNumber', '')
                    file = self._value_or_default(frame, 'fileName', '<anonymous>')
                    if line:
                        file = "%s:%s" % (file, line)
                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')
                    if 'className' in frame:
                        meth = "%s.%s" % (frame['className'], meth)
                    msg = "    at %s (%s)"
                    msg = msg % (meth, file)
                    stacktrace.append(msg)
            except TypeError:
                pass
        if exception_class == ErrorInResponseException:
            raise exception_class(response, message)
        elif exception_class == UnexpectedAlertPresentException:
            alert_text = None
            if 'data' in value:
                alert_text = value['data'].get('text')
            elif 'alert' in value:
                alert_text = value['alert'].get('text')
            raise exception_class(message, screen, stacktrace, alert_text)
>       raise exception_class(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: connection refused
E       Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'
E       System info: host: '93407da0d186', ip: '172.18.0.2', os.name: 'Linux', os.arch: 'amd64', os.version: '4.19.128-microsoft-standard', java.version: '1.8.0_252'
E       Driver info: driver.version: unknown
E       remote stacktrace: 
E       Stacktrace:
E           at sun.reflect.NativeConstructorAccessorImpl.newInstance0 (NativeConstructorAccessorImpl.java:-2)
E           at sun.reflect.NativeConstructorAccessorImpl.newInstance (NativeConstructorAccessorImpl.java:62)
E           at sun.reflect.DelegatingConstructorAccessorImpl.newInstance (DelegatingConstructorAccessorImpl.java:45)
E           at java.lang.reflect.Constructor.newInstance (Constructor.java:423)
E           at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0 (W3CHandshakeResponse.java:62)
E           at org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0 (HandshakeResponse.java:30)
E           at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0 (ProtocolHandshake.java:126)
E           at java.util.stream.ReferencePipeline$3$1.accept (ReferencePipeline.java:193)
E           at java.util.Spliterators$ArraySpliterator.tryAdvance (Spliterators.java:958)
E           at java.util.stream.ReferencePipeline.forEachWithCancel (ReferencePipeline.java:126)
E           at java.util.stream.AbstractPipeline.copyIntoWithCancel (AbstractPipeline.java:499)
E           at java.util.stream.AbstractPipeline.copyInto (AbstractPipeline.java:486)
E           at java.util.stream.AbstractPipeline.wrapAndCopyInto (AbstractPipeline.java:472)
E           at java.util.stream.FindOps$FindOp.evaluateSequential (FindOps.java:152)
E           at java.util.stream.AbstractPipeline.evaluate (AbstractPipeline.java:234)
E           at java.util.stream.ReferencePipeline.findFirst (ReferencePipeline.java:531)
E           at org.openqa.selenium.remote.ProtocolHandshake.createSession (ProtocolHandshake.java:128)
E           at org.openqa.selenium.remote.ProtocolHandshake.createSession (ProtocolHandshake.java:74)
E           at org.openqa.selenium.grid.session.remote.RemoteSession$Factory.performHandshake (RemoteSession.java:147)
E           at org.openqa.selenium.grid.session.remote.ServicedSession$Factory.apply (ServicedSession.java:161)
E           at org.openqa.selenium.remote.server.ActiveSessionFactory.lambda$apply$12 (ActiveSessionFactory.java:180)
E           at java.util.stream.ReferencePipeline$3$1.accept (ReferencePipeline.java:193)
E           at java.util.stream.ReferencePipeline$11$1.accept (ReferencePipeline.java:440)
E           at java.util.stream.ReferencePipeline$2$1.accept (ReferencePipeline.java:175)
E           at java.util.Spliterators$ArraySpliterator.tryAdvance (Spliterators.java:958)
E           at java.util.stream.ReferencePipeline.forEachWithCancel (ReferencePipeline.java:126)
E           at java.util.stream.AbstractPipeline.copyIntoWithCancel (AbstractPipeline.java:499)
E           at java.util.stream.AbstractPipeline.copyInto (AbstractPipeline.java:486)
E           at java.util.stream.AbstractPipeline.wrapAndCopyInto (AbstractPipeline.java:472)
E           at java.util.stream.FindOps$FindOp.evaluateSequential (FindOps.java:152)
E           at java.util.stream.AbstractPipeline.evaluate (AbstractPipeline.java:234)
E           at java.util.stream.ReferencePipeline.findFirst (ReferencePipeline.java:531)
E           at org.openqa.selenium.remote.server.ActiveSessionFactory.apply (ActiveSessionFactory.java:183)
E           at org.openqa.selenium.remote.server.NewSessionPipeline.lambda$null$2 (NewSessionPipeline.java:66)
E           at java.util.stream.ReferencePipeline$3$1.accept (ReferencePipeline.java:193)
E           at java.util.stream.ReferencePipeline$2$1.accept (ReferencePipeline.java:175)
E           at java.util.Collections$2.tryAdvance (Collections.java:4719)
E           at java.util.stream.ReferencePipeline.forEachWithCancel (ReferencePipeline.java:126)
E           at java.util.stream.AbstractPipeline.copyIntoWithCancel (AbstractPipeline.java:499)
E           at java.util.stream.AbstractPipeline.copyInto (AbstractPipeline.java:486)
E           at java.util.stream.AbstractPipeline.wrapAndCopyInto (AbstractPipeline.java:472)
E           at java.util.stream.FindOps$FindOp.evaluateSequential (FindOps.java:152)
E           at java.util.stream.AbstractPipeline.evaluate (AbstractPipeline.java:234)
E           at java.util.stream.ReferencePipeline.findFirst (ReferencePipeline.java:531)
E           at org.openqa.selenium.remote.server.NewSessionPipeline.lambda$createNewSession$3 (NewSessionPipeline.java:69)
E           at java.util.stream.ReferencePipeline$3$1.accept (ReferencePipeline.java:193)
E           at java.util.stream.ReferencePipeline$3$1.accept (ReferencePipeline.java:193)
E           at java.util.stream.ReferencePipeline$3$1.accept (ReferencePipeline.java:193)
E           at java.util.stream.DistinctOps$1$2.accept (DistinctOps.java:175)
E           at java.util.stream.ReferencePipeline$2$1.accept (ReferencePipeline.java:175)
E           at java.util.stream.ReferencePipeline$3$1.accept (ReferencePipeline.java:193)
E           at java.util.stream.ReferencePipeline$2$1.accept (ReferencePipeline.java:175)
E           at java.util.stream.Streams$StreamBuilderImpl.tryAdvance (Streams.java:405)
E           at java.util.stream.Streams$ConcatSpliterator.tryAdvance (Streams.java:728)
E           at java.util.stream.ReferencePipeline.forEachWithCancel (ReferencePipeline.java:126)
E           at java.util.stream.AbstractPipeline.copyIntoWithCancel (AbstractPipeline.java:499)
E           at java.util.stream.AbstractPipeline.copyInto (AbstractPipeline.java:486)
E           at java.util.stream.AbstractPipeline.wrapAndCopyInto (AbstractPipeline.java:472)
E           at java.util.stream.FindOps$FindOp.evaluateSequential (FindOps.java:152)
E           at java.util.stream.AbstractPipeline.evaluate (AbstractPipeline.java:234)
E           at java.util.stream.ReferencePipeline.findFirst (ReferencePipeline.java:531)
E           at org.openqa.selenium.remote.server.NewSessionPipeline.createNewSession (NewSessionPipeline.java:72)
E           at org.openqa.selenium.remote.server.commandhandler.BeginSession.execute (BeginSession.java:65)
E           at org.openqa.selenium.remote.server.WebDriverServlet.lambda$handle$0 (WebDriverServlet.java:235)
E           at java.util.concurrent.Executors$RunnableAdapter.call (Executors.java:511)
E           at java.util.concurrent.FutureTask.run (FutureTask.java:266)
E           at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1149)
E           at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:624)
E           at java.lang.Thread.run (Thread.java:748)

..\..\appdata\local\programs\python\python38-32\lib\site-packages\selenium\webdriver\remote\errorhandler.py:242: TimeoutException
=========================== short test summary info ===========================
ERROR src\test_cases\UI\open_weather_test.py::TestOpenWeather::test_search_weather_with_valid_city_and_display_results_correctly[ho chi minh]
ERROR src\test_cases\UI\open_weather_test.py::TestOpenWeather::test_search_weather_with_valid_city_and_display_results_correctly[ho chi minh, vn]
======================== 2 errors in 76.92s (0:01:16) =========================
